#!/usr/bin/bash

## To Do finish this script and handle variables

email="{email}"
webmin_email="{webminemail}"
webmin_email_domain="gmail.com"
subnet="3"
router_base="192.168.$subnet.0"
router_ip="192.168.$subnet.1"
domain="{domain}"
subdomain="TBD"
pi_ip="192.168.$subnet.2"
api_key="cloudflareapikey"

curl -s https://golift.io/repo.sh | sudo bash -s - notifiarr
curl -fsSL https://tailscale.com/install.sh | sh

sudo add-apt-repository ppa:ddclient
echo "deb [signed-by=/usr/share/keyrings/azlux-archive-keyring.gpg] http://packages.azlux.fr/debian/ bullseye main" | sudo tee /etc/apt/sources.list.d/azlux.list
sudo wget -O /usr/share/keyrings/azlux-archive-keyring.gpg  https://azlux.fr/repo.gpg
sudo apt update && sudo apt upgrade -y && sudo apt install -y rpi-eeprom unbound ufw fail2ban perl libnet-ssleay-perl openssl libauthen-pam-perl libpam-runtime libio-pty-perl libsasl2-modules apt-show-versions python3 unzip sntp ntpdate libauthen-sasl-perl libio-socket-ssl-perl ddclient postfix php-curl unzip python-is-python3 smartmontools iotop needrestart upx log2ram && sudo apt autoremove -y

wget "http://www.webmin.com/download/deb/webmin-current.deb" -O /tmp/webmin.deb
 dpkg --install /tmp/webmin.deb

#config unbound
cat << EOF | sudo tee /etc/unbound/unbound.conf.d/pi-hole.conf > /dev/null
server:
    # If no logfile is specified, syslog is used
    logfile: "/var/log/unbound/unbound.log"
    verbosity: 0

    interface: 127.0.0.1
    port: 5335
    do-ip4: yes
    do-udp: yes
    do-tcp: yes

    # May be set to yes if you have IPv6 connectivity
    do-ip6: no

    # You want to leave this to no unless you have *native* IPv6. With 6to4 and
    # Terredo tunnels your web browser should favor IPv4 for the same reasons
    prefer-ip6: no

    # Use this only when you downloaded the list of primary root servers!
    # If you use the default dns-root-data package, unbound will find it automatically
    #root-hints: "/var/lib/unbound/root.hints"

    # Trust glue only if it is within the server's authority
    harden-glue: yes

    # Require DNSSEC data for trust-anchored zones, if such data is absent, the zone becomes BOGUS
    harden-dnssec-stripped: yes

    # Don't use Capitalization randomization as it known to cause DNSSEC issues sometimes
    # see https://discourse.pi-hole.net/t/unbound-stubby-or-dnscrypt-proxy/9378 for further details
    use-caps-for-id: no

    # Reduce EDNS reassembly buffer size.
    # Suggested by the unbound man page to reduce fragmentation reassembly problems
    edns-buffer-size: 1472

    # Perform prefetching of close to expired message cache entries
    # This only applies to domains that have been frequently queried
    prefetch: yes

    # One thread should be sufficient, can be increased on beefy machines. In reality for most users running on small networks or on a single machine, it should be unnecessary to seek performance enhancement by increasing num-threads above 1.
    num-threads: 1

    # Ensure kernel buffer is large enough to not lose messages in traffic spikes
    so-rcvbuf: 1m

    # Ensure privacy of local IP ranges
    private-address: 192.168.0.0/16
    private-address: 169.254.0.0/16
    private-address: 172.16.0.0/12
    private-address: 10.0.0.0/8
    private-address: fd00::/8
    private-address: fe80::/10
EOF
sudo systemctl restart unbound
#ToDo Validate Response
dig pi-hole.net @127.0.0.1 -p 5335
dig sigfail.verteiltesysteme.net @127.0.0.1 -p 5335
dig sigok.verteiltesysteme.net @127.0.0.1 -p 5335

# *** add list syncs***
wget -O - https://raw.githubusercontent.com/jacklul/pihole-updatelists/master/install.sh | sudo bash

cat << EOF | sudo tee /etc/pihole-updatelists.conf > /dev/null
; Pi-hole's Lists Updater by Jack'lul
; https://github.com/jacklul/pihole-updatelists

; Remote list URL containing list of adlists to import
ADLISTS_URL="https://v.firebog.net/hosts/lists.php?type=nocross"

; Remote list URL containing exact domains to whitelist
WHITELIST_URL="https://raw.githubusercontent.com/anudeepND/whitelist/master/domains/whitelist.txt"

; Remote list URL containing regex rules for whitelisting
REGEX_WHITELIST_URL="https://raw.githubusercontent.com/mmotti/pihole-regex/master/whitelist.list"

; Remote list URL containing exact domains to blacklist
; This is specifically for handcrafted lists only, do not use regular blocklists here!
BLACKLIST_URL=""

; Remote list URL containing regex rules for blacklisting
REGEX_BLACKLIST_URL="https://raw.githubusercontent.com/mmotti/pihole-regex/master/regex.list"

; =============================================================
; OPTIONAL PARAMETERS (and their default values)
; To change them you have to uncomment them first (remove prefixing ';')

; Comment string used to know which entries were created by the script
; You can still add your own comments to individual entries as long
; you keep this string intact
COMMENT="pihole-updatelists -firebog all"

; Assign additional group to all inserted entries
; To assign only the specified group (do not add to the default) make the number negative
; $(0) is the default group, you can view ID of the group in Pi-hole's web interface
; by hovering mouse cursor over group name field on the 'Group management' page
;GROUP_ID=0

; Makes sure entries have the specified group assigned on each run
; This does not prevent you from assigning more groups through the web interface
; but can remove entries from the default group if GROUP_ID is negative number
; Do not enable this when you're running multiple different configs
;PERSISTENT_GROUP=false

; Prevent touching entries not created by this script by comparing comment field
; When disabled any user-created entry will be disabled
;REQUIRE_COMMENT=true

; Update gravity after lists are updated? (runs $(pihole updateGravity))
; When disabled invokes lists reload instead
; Set to 'null' to do nothing
UPDATE_GRAVITY=true
; true causes pihole to have -2 blocklist
; false causes pihole to have -2 blocklist

; Vacuum database at the end? (runs $(VACUUM) SQLite command)
; Will cause additional writes to disk
VACUUM_DATABASE=false
; more likely this causes -2 actually, keep at false!

; Show more information while the script is running
;VERBOSE=true

; Show debug messages for troubleshooting purposes
;DEBUG=true

; Maximum time in seconds one list download can take before giving up
; You should increase this when downloads fail because of timeout
;DOWNLOAD_TIMEOUT=180

; Ignore download failures when using multiple lists
; This will cause entries from the lists that failed to download to be disabled
;IGNORE_DOWNLOAD_FAILURE=false

; Location of gravity.db file in case you need to change it
;GRAVITY_DB="/etc/pihole/gravity.db"

; Process lockfile to prevent multiple instances of the script from running
; You shouldn't change it - unless $(/var/lock) is unavailable
;LOCK_FILE="/var/lock/pihole-updatelists.lock"

; Log console output to file
; In most cases you don't have to set this as you can view the log in the system journal
; Put $(-) before path to overwrite file instead of appending to it
;LOG_FILE=""

; Branch to pull remote checksum and update from
;GIT_BRANCH="develop"
EOF

cat << EOF | sudo tee /etc/pihole/setupVars.conf > /dev/null
API_EXCLUDE_DOMAINS=pihole,pi-hole,localhost,*.arpa,wpad
API_EXCLUDE_CLIENTS=localhost
API_QUERY_LOG_SHOW=all
API_PRIVACY_MODE=false
BLOCKING_ENABLED=true
ADMIN_EMAIL=$email
WEBUIBOXEDLAYOUT=boxed
WEBTHEME=default-darker
DNSMASQ_LISTENING=all
DNSSEC=false
REV_SERVER=true
REV_SERVER_CIDR=$router_base/24
REV_SERVER_TARGET=$router_ip
REV_SERVER_DOMAIN=home
PIHOLE_INTERFACE=eth0
IPV4_ADDRESS=$pi_ip/24
IPV6_ADDRESS=
PIHOLE_DNS_1=127.0.0.1#5335
PIHOLE_DNS_2=
QUERY_LOGGING=true
INSTALL_WEB_SERVER=true
INSTALL_WEB_INTERFACE=true
LIGHTTPD_ENABLED=true
CACHE_SIZE=10000
DNS_FQDN_REQUIRED=true
DNS_BOGUS_PRIV=false
EOF

cat << EOF | sudo tee /etc/pihole/pihole-FTL.conf > /dev/null
IGNORE_LOCALHOST=yes
ANALYZE_ONLY_A_AND_AAAA=true
RATE_LIMIT=0/0
PRIVACYLEVEL=0
EOF

curl -sSL https://install.pi-hole.net | sudo bash

#Webmin
Echo "Modify Webmin - Install security updates enabled"
Echo "Set email noticies to $email"
Echo "Use Email Server <piHole_$site+$webmin_email$site@$webmin_email_domain>"
Echo "Change timezone CDT-5 / CST-6"

cat << EOF | sudo tee /etc/ddclient.conf > /dev/null 
# Configuration file for ddclient generated by debconf
#
# /etc/ddclient.conf
daemon=1800                             # check every 300 seconds
syslog=yes                              # log update msgs to syslog
mail=root                               # mail all msgs to root
mail-failure=root                       # mail failed update msgs to root
pid=/var/run/ddclient.pid               # record PID in file.
ssl=yes                                 # use ssl-support.  Works with
                                       # ssl-library
use=web, web=checkip.dyndns.com/, web-skip='IP Address'
cache=/tmp/ddclient.cache
#
## CloudFlare (cloudflare.com)
##
protocol=cloudflare,
zone=$domain,    \
login=$email, \
password=$api_key \
$subdomain.$domain
EOF

cat << EOF | sudo tee sudo nano /etc/default/ddclient > /dev/null
run_daemon="true"
EOF

sudo systemctl enable ddclient.service

curl -L https://install.pivpn.io | bash

# setup clients (manual)

## setup pi sync
## https://github.com/vmstan/gravity-sync/wiki/Installing#primary-pi-hole
export GS_INSTALL=secondary && curl -sSL https://gravity.vmstan.com | bash
# for secondaries

## 24236 home port